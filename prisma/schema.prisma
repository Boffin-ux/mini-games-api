generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique(map: "email_1")
  name      String
  password  String?
  image     String?
  isBlocked Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  provider      Provider   @default(local)
  roles         UserRole[] @default([User])
  statistics    Stats[]
  refreshTokens Token[]

  @@map("users")
}

model Product {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String @unique(map: "name_1")
  description String

  statistics Stats[]

  @@map("products")
}

model Stats {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now()) @db.Date
  level     Int      @default(1)
  totalTime String?
  score     Int?
  other     String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String  @db.ObjectId

  @@map("statistics")
}

model Token {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  token     String @unique
  userAgent String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId

  @@map("tokens")
}

enum UserRole {
  Admin
  User
}

enum Provider {
  local
  google
  yandex
  github
}
